# templates

.test_template: &test
  stage: test
  variables:
    GIT_STRATEGY: none
    CONFIG_MODULE: coston
  image:
    name: $CI_REGISTRY_IMAGE:$CI_COMMIT_BRANCH
    entrypoint: [""]
  only:
    - branches

.build_template: &build
  stage: build
  image:
    name: gcr.io/kaniko-project/executor:debug
    entrypoint: [""]
  before_script:
    - mkdir -p /kaniko/.docker
    - echo "$CI_COMMIT_SHA" > COMMIT_HASH
    - echo "{\"auths\":{\"$CI_REGISTRY\":{\"username\":\"$CI_REGISTRY_USER\",\"password\":\"$CI_REGISTRY_PASSWORD\"}}}" > /kaniko/.docker/config.json


stages:
  - build
  - test
  - release_flare_infra

build_branches:
  <<: *build
  script:
    - /kaniko/executor
      --context $CI_PROJECT_DIR
      --dockerfile $CI_PROJECT_DIR/Dockerfile
      --destination $CI_REGISTRY_IMAGE:$CI_COMMIT_BRANCH
      --cache=true
      --cache-ttl=120h
  only:
    - branches

build_tags:
  <<: *build
  script:
    - /kaniko/executor
      --context $CI_PROJECT_DIR
      --dockerfile $CI_PROJECT_DIR/Dockerfile
      --destination $CI_REGISTRY_IMAGE:$CI_COMMIT_TAG
      --cache=true
      --cache-ttl=120h
  only:
    - tags

test_ruff:
  <<: *test
  script:
    - cd /app
    - pip install -r dev-requirements.txt
    - python -m ruff check .
    - python -m ruff format --check

test_django:
  <<: *test
  script:
    - cd /app
    - pip install -r dev-requirements.txt
    - coverage run --source="." manage.py test --settings=project.settings.ci_testing
    - coverage xml
    - mv coverage.xml $CI_PROJECT_DIR/
    - mv testreport.xml $CI_PROJECT_DIR/
  artifacts:
    reports:
      junit: testreport.xml
      coverage_report:
        coverage_format: cobertura
        path: coverage.xml

.release_flare_infra:
  stage: release_flare_infra
  rules:
    - if: "$CI_COMMIT_TAG"

# todo: Remove once GitHub repo is public and use images from ghcr
release_flare_infra:auth:
  extends: .release_flare_infra
  image: registry.gitlab.com/flarenetwork/infra/pipeliner:latest
  id_tokens:
    OIDC_JOB_TOKEN:
      aud: https://gitlab.com
  variables:
    GCP_PROJECT: "flare-network-shared"
    GCP_PROJECT_NUMBER: "940168819002"
  before_script:
    - >
      WORKLOAD_IDENTITY_POOL=$([ "$CI_COMMIT_REF_PROTECTED" == "true" ] &&
      echo "cr-oidc-gitlab-protected-pool" ||
      echo "cr-oidc-gitlab-pool")
    - >
      WORKLOAD_IDENTITY_POOL_PROVIDER=$([ "$CI_COMMIT_REF_PROTECTED" == "true" ] &&
      echo "oidc-gitlab-protected" ||
      echo "oidc-gitlab-pool-provider")
    - >
      SERVICE_ACCOUNT_EMAIL=$([ "$CI_COMMIT_REF_PROTECTED" == "true" ] &&
      echo "cr-prtctd-oidc-cntnr-img-bldr@flare-network-shared.iam.gserviceaccount.com" ||
      echo "cr-oidc-cntnr-img-bldr@flare-network-shared.iam.gserviceaccount.com")
    - . pipeliner gcloud-setup
  script:
    - echo "GOOGLE_OAUTH_ACCESS_TOKEN=$GOOGLE_OAUTH_ACCESS_TOKEN" > auth.env
  artifacts:
    reports:
      dotenv:
        - auth.env

release_flare_infra:
  extends: .release_flare_infra
  image:
    name: gcr.io/kaniko-project/executor:v1.18.0-debug
    entrypoint: [""]
  needs:
    - job: release_flare_infra:auth
      artifacts: true
  before_script:
    - mkdir -p /kaniko/.docker
    - auth_encoded=$(echo -n "oauth2accesstoken:$GOOGLE_OAUTH_ACCESS_TOKEN" | base64 | tr -d "\n")
    - echo "{\"auths\":{\"europe-west1-docker.pkg.dev\":{\"auth\":\"$auth_encoded\",\"email\":\"not@val.id\"}}}" > /kaniko/.docker/config.json
  script:
    - >
      args="--context ${CI_PROJECT_DIR}/.
        --dockerfile ${CI_PROJECT_DIR}/Dockerfile
        --cache=true
        --destination europe-west1-docker.pkg.dev/flare-network-staging/containers/data-availability:latest
        --destination europe-west1-docker.pkg.dev/flare-network-staging/containers/data-availability:${CI_COMMIT_TAG}"
    - >-
      if [[ $CI_COMMIT_REF_PROTECTED == "true" ]]; then
        args="$args --destination europe-west1-docker.pkg.dev/flare-network-production/containers/data-availability:latest"
        args="$args --destination europe-west1-docker.pkg.dev/flare-network-production/containers/data-availability:${CI_COMMIT_TAG}"
      fi
    - /kaniko/executor $args
