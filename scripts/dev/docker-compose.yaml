services:
  postgresdb:
    container_name: ${COMPOSE_PROJECT_NAME}_db
    image: postgres:16
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready", "-d", "${DB_NAME}"]
      interval: 10s
      timeout: 5s
      retries: 5
    # uncomment if you need to connect to db outside of docker, eg: pgadmin
    # ports:
    #   - "127.0.0.1:${DB_PROXY_PORT}:5432"
    # uncomment to persist db data between downs
    # volumes:
    #  - ./db-data/:/var/lib/postgresql/data
    # uncomment for query logging
    # command: ["postgres", "-c", "log_statement=all", "-c", "log_destination=stderr"]

  appserver:
    container_name: ${COMPOSE_PROJECT_NAME}_server
    build:
      context: ../../
      dockerfile: scripts/dev/Dockerfile
    environment:
      PYTHONUNBUFFERED: 1
    env_file:
      - ../../.env
    ports:
      - "0.0.0.0:${SERVER_PROXY_PORT}:8000"
    depends_on:
      postgresdb:
        condition: service_healthy
    # uncomment if healthcheck is needed
    # healthcheck:
    #   test: curl --fail http://localhost:8000/api/health || exit 1
    #   interval: 10s
    #   timeout: 5s
    #   retries: 5

    volumes:
      - ../../:/app
